class PlayedGame {

  // State Machine
  
  playStatus {
    Ready {
      entry / { doSetup(); }
      play -> Moving;
    }
    Moving {
      pause -> Paused;
      move [hitPaddle()] / { doHitPaddleOrWall(); } -> Moving;
      move [isOutOfBoundsAndLastLife()] / { doOutOfBounds(); } -> GameOver;
      move [isOutOfBounds()] / { doOutOfBounds(); } -> Paused;
      move [hitLastBlockAndLastLevel()] / { doHitBlock(); } -> GameOver;
      move [hitLastBlock()] / { doHitBlockNextLevel(); } -> Ready;
      move [hitBlock()] / { doHitBlock(); } -> Moving;
      move [hitWall()] / { doHitPaddleOrWall(); } -> Moving;
      move / { doHitNothingAndNotOutOfBounds(); } -> Moving;
    }
    Paused {
      play -> Moving;
    }
    GameOver {
      entry / { doGameOver(); }
    }
  }
  
  // Guards
  
  private boolean hitPaddle() {
    // TODO implement
    return false;
  }

  private boolean isOutOfBoundsAndLastLife() {
    // TODO implement
    return false;
  }
  
  private boolean isOutOfBounds() {
    // TODO implement
    return false;
  }
  
  private boolean hitLastBlockAndLastLevel() {
    // TODO implement
    return false;
  }
  
  private boolean hitLastBlock(){
    // TODO implement
    return false;
  }
  
  private boolean hitBlock() {
    // TODO implement
    return false;
  }
  
  private boolean hitWall() {
    // TODO implement
    return false;
  }
  
  // Actions
  
  private void doSetup() {
    // TODO implement
    PlayedGame.resetCurrentBallX();
    PlayedGame.resetCurrentBallY();
    PlayedGame.resetBallDirectionX();
    PlayedGame.resetBallDirectionY();
    PlayedGame.resetCurrentPaddleX();
    PlayedGame.getGame();
    Game level = Game.getLevel(currentLevel-1);
    // not sure about next one
    assignments = level.getBlockAssignments();
    for(Level a : assignments){
    PlayerBlockAssignment pblock = new PlayerBlockAssignment(Game.WALL_PADDING + (Block.SIZE + Game.COLUMNS_PADDING)*(a.getGridHorizontalPosition()-1),
                                                        Game.WALL_PADDING+(Block.SIZE + Game.ROW_PADDING)*(a.getGridVerticalPosition-1),a.getBlock(),this);

   }
    for(numberOfBlocks<game.getNrBlocksPerLevel()){
    //TODO implement getRandomBlock()
    PlayerBlockAssignment pblock = new PlayerBlockAssignment(x,y,game.getRandomBlock(),this);
    }
  }
  
  private void doHitPaddleOrWall() {
    // TODO implement
  }

  private void doOutOfBounds() {
    // TODO implement
  }

  private void doHitBlock() {
    // TODO implement
  }

  private void doHitBlockNextLevel() {
    // TODO implement
  }

  private void doHitNothingAndNotOutOfBounds() {
    // TODO implement
  }

  private void doGameOver() {
    // TODO implement
  }

}
